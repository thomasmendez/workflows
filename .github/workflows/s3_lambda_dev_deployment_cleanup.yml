name: S3 Lamda Dev Deployment Cleanup

# Apply cleanup on closed request
# on:
#   pull_request:
#     types: [closed]

on:
  workflow_call:
    inputs:
      AWS_BUCKET_NAME:
        description: 'The name of the AWS bucket'
        required: true
        type: string
      AWS_REGION:
        description: 'The region where the AWS bucket will be deployed to'
        default: 'us-east-2'
        required: false
        type: string
    secrets:
      TF_API_TOKEN:
        description: 'The credentials for Terraform Cloud'
        required: true
      AWS_ACCESS_KEY_ID:
        description: 'The AWS access key obtained from the IAM role'
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: 'The AWS secret access key obtained from the IAM role'
        required: true

jobs:
  dev_destroy_s3_dev:
    runs-on: ubuntu-latest
    steps:
      - name: Clone workflow repository
        uses: actions/checkout@v3
        with:
          repository: thomasmendez/workflows

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format - Destroy Existing Bucket
        id: fmt-destroy
        run: terraform -chdir=terraform/development/lambda/destroy fmt -check

      - name: Terraform Init - Destroy Existing Bucket
        id: init-destroy
        run: terraform -chdir=terraform/development/lambda/destroy init -backend-config="region=${{ inputs.AWS_REGION }}" -backend-config="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -backend-config="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      - name: Terraform Validate - Destroy Existing Bucket
        id: validate-destroy
        run: terraform -chdir=terraform/development/lambda/destroy validate -no-color

      - name: Terraform Plan - Destroy Existing Bucket
        id: plan-destroy
        run: |
          export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
          export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          export AWS_DEFAULT_REGION="${{ inputs.AWS_REGION }}"
          terraform -chdir=terraform/development/lambda/destroy plan -var="aws_bucket_name=${{ inputs.AWS_BUCKET_NAME }}" -no-color

      - name: Terraform Apply - Destroy Existing Bucket
        id: apply-destroy
        if: steps.plan-destroy.outcome == 'success'
        run: |
          export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
          export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          export AWS_DEFAULT_REGION="${{ inputs.AWS_REGION }}"
          terraform -chdir=terraform/development/lambda/destroy import -var="aws_bucket_name=${{ inputs.AWS_BUCKET_NAME }}" aws_s3_bucket.bucketdev ${{ inputs.AWS_BUCKET_NAME }}
          terraform -chdir=terraform/development/lambda/destroy apply -var="aws_bucket_name=${{ inputs.AWS_BUCKET_NAME }}" -auto-approve
          terraform -chdir=terraform/development/lambda/destroy destroy -var="aws_bucket_name=${{ inputs.AWS_BUCKET_NAME }}" -auto-approve
